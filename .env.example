#############################################
# Global .env for docker-compose (copy -> .env)
#############################################

# ---------- Postgres ----------
POSTGRES_DB=dumcsi_db
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# ---------- Backend ----------
# Kestrel will listen on 5000 inside container
ASPNETCORE_ENVIRONMENT=Development
ASPNETCORE_URLS=http://+:5000

# Connection string used by the backend
ConnectionStrings__DumcsiDb=Host=postgres;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}

# JWT secret for backend (base64 or long random string)
JWTFactoryOptions__Secret=changeme-super-secret

# ---------- MinIO ----------
# Root credentials for MinIO console (do not use in app)
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin

# Service account (created by init job) used by the backend
MINIO_SVC_USER=dumcsi_svc
MINIO_SVC_PASSWORD=changeme-minio-svc-secret
MINIO_BUCKET=dumcsi
# Whether to allow public read (anonymous GET) on bucket objects
MINIO_BUCKET_PUBLIC=true

# Backend MinIO config
Minio__Endpoint=minio:9000
Minio__AccessKey=${MINIO_SVC_USER}
Minio__SecretKey=${MINIO_SVC_PASSWORD}
Minio__UseSSL=false
Minio__BucketName=${MINIO_BUCKET}
Minio__PublicBasePath=/s3

# ---------- LiveKit ----------
# Admin key/secret used by backend to sign tokens
LIVEKIT_API_KEY=devkey
LIVEKIT_API_SECRET=devsecret

# Read-only key/secret for limited grants (optional)
LIVEKIT_RO_API_KEY=
LIVEKIT_RO_API_SECRET=

# LiveKit URL for backend + frontend
LiveKit__ServerUrl=ws://livekit:7880
# Leave frontend LiveKit URL empty to use same-host proxy at /livekit
VITE_LIVEKIT_URL=

# ---------- Frontend ----------
# API URL the frontend calls. Default to same-origin /api (proxied by Nginx).
VITE_API_URL=/api

# Tenor GIF Search API key (optional). Get one from Google Tenor.
# If empty, a public demo key may be used with strict limits.
VITE_TENOR_API_KEY=

# Optional: static site port on host (maps to 80 in container)
FRONTEND_HOST_PORT=5173

# ---------- CORS ----------
# Comma-separated list of allowed origins for backend
# Backend CORS allowed origins (not used when frontends call via same-origin proxies)
Cors__AllowedOrigins=http://localhost:5173
