services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  minio:
    image: minio/minio:latest
    command: server /data --console-address :9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Console
    volumes:
      - minio-data:/data
      - minio-config:/root/.minio
    restart: unless-stopped

  minio-init:
    image: minio/mc:latest
    depends_on:
      - minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET}
      MINIO_SVC_USER: ${MINIO_SVC_USER}
      MINIO_SVC_PASSWORD: ${MINIO_SVC_PASSWORD}
    volumes:
      - ./docker/minio/init-minio.sh:/init-minio.sh:ro
      - ./docker/minio/bucket-policy.json:/policy/bucket-policy.json:ro
    entrypoint: ["/bin/sh","/init-minio.sh"]
    restart: "no"

  livekit-config:
    image: alpine:3
    environment:
      LIVEKIT_API_KEY: ${LIVEKIT_API_KEY}
      LIVEKIT_API_SECRET: ${LIVEKIT_API_SECRET}
      LIVEKIT_RO_API_KEY: ${LIVEKIT_RO_API_KEY}
      LIVEKIT_RO_API_SECRET: ${LIVEKIT_RO_API_SECRET}
    volumes:
      - livekit-config:/config
      - ./docker/livekit/livekit.yaml:/tmpl/livekit.yaml:ro
    entrypoint: ["/bin/sh","-c"]
    command: |
      set -e
      # Generate RO key/secret if empty
      if [ -z "${LIVEKIT_RO_API_KEY}" ]; then export LIVEKIT_RO_API_KEY=$(head -c 16 /dev/urandom | base64 | tr -dc 'A-Za-z0-9' | head -c 12); fi
      if [ -z "${LIVEKIT_RO_API_SECRET}" ]; then export LIVEKIT_RO_API_SECRET=$(head -c 32 /dev/urandom | base64 | tr -dc 'A-Za-z0-9' | head -c 32); fi
      mkdir -p /config
      apk add --no-cache gettext >/dev/null 2>&1
      envsubst < /tmpl/livekit.yaml > /config/livekit.yaml
      echo "LiveKit config created at /config/livekit.yaml"
    restart: "no"

  livekit:
    image: livekit/livekit-server:latest
    depends_on:
      - livekit-config
    volumes:
      - livekit-config:/config:ro
    command: ["--config","/config/livekit.yaml"]
    ports:
      - "7880:7880"      # HTTP/WS signaling
      - "7881:7881"      # TCP fallback
      - "7882:7882/udp"  # UDP discovery
      - "50000-50200:50000-50200/udp"  # media UDP range (narrow for local)
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ASPNETCORE_URLS: ${ASPNETCORE_URLS}
      ConnectionStrings__DumcsiDb: ${ConnectionStrings__DumcsiDb}
      JWTFactoryOptions__Secret: ${JWTFactoryOptions__Secret}
      Cors__AllowedOrigins: ${Cors__AllowedOrigins}
      Minio__Endpoint: ${Minio__Endpoint}
      Minio__AccessKey: ${Minio__AccessKey}
      Minio__SecretKey: ${Minio__SecretKey}
      Minio__UseSSL: ${Minio__UseSSL}
      Minio__BucketName: ${Minio__BucketName}
      LiveKit__ServerUrl: ${LiveKit__ServerUrl}
      LiveKit__ApiKey: ${LIVEKIT_API_KEY}
      LiveKit__ApiSecret: ${LIVEKIT_API_SECRET}
    depends_on:
      - postgres
      - minio-init
      - livekit
    ports:
      - "5000:5000"
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
        VITE_LIVEKIT_URL: ${VITE_LIVEKIT_URL}
    depends_on:
      - backend
      - livekit
    ports:
      - "${FRONTEND_HOST_PORT:-5173}:80"
    volumes:
      - ./docker/frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped

volumes:
  pgdata:
  minio-data:
  minio-config:
  livekit-config:
